security:
  encoders:
    App\Entity\User:
      algorithm: bcrypt

  providers:
    entity_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    api:
      pattern:  ^/api
      stateless: true
      anonymous: true
      json_login:
        check_path: /api/login_check
        username_path: email
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
#      provider: entity_provider
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator
#    login:
#      pattern:  ^/api/login
#      stateless: true
#      anonymous: true
#      json_login:
#        check_path: /api/login_check
#        success_handler: lexik_jwt_authentication.handler.authentication_success
#        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    register:
      pattern:  ^/api/register
      stateless: true
      anonymous: true
#
  access_control:
    - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY } # Allows accessing the Swagger UI
#    - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

#  access_control:
#    - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY } # Allows accessing the Swagger UI
#    - { path: ^/authentication_token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#    - { path: ^/, roles: IS_AUTHENTICATED_FULLY }